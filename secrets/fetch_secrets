#!/bin/sh

TOKEN_FILE=/tmp/auth.token
JSON_KEY_FILE=/tmp/keys.json
PLAIN_KEY_FILE=/tmp/keys.txt
TMP_KEY_FILE=/tmp/key_value_pair
KEY_FILE=/etc/secrets

EXCHANGE_ADDR=${EXCHANGE_ADDR%/}

if [ -f ${KEY_FILE} ]; then
    rm ${KEY_FILE}
fi

if [ -z "$VAULT_GROUP" ]; then
  echo "Vault group must be set as an ENV var"
  exit 1
fi

if [ -z "$VAULT_ADDR" ]; then
  echo "Vault address must be set as an ENV var"
  exit 1
fi

if [ -z "$EXCHANGE_HOST" ]; then
  echo "Exchange host must be set as an ENV var"
  exit 1
fi

if [ -z "$EXCHANGE_ADDR" ]; then
  echo "Exchange address must be set as an ENV var"
  exit 1
fi

echo "waiting for ping response from exchange: ${EXCHANGE_HOST}"
until ping -q -c 1 ${EXCHANGE_HOST}
do
  echo "waiting for exchange"
done

curl "${EXCHANGE_ADDR}/group/token/${VAULT_GROUP}" > ${TOKEN_FILE} 2>/dev/null

if [ "$?" -ne "0" ]; then
  echo "Could not authenticate with the exchange server";
  exit 1
fi

AUTH_TOKEN=$(cat ${TOKEN_FILE})

echo "Got auth token: ${AUTH_TOKEN}"

curl "${VAULT_ADDR}/v1/secret/${VAULT_GROUP}/?list=true" -H"x-vault-token:${AUTH_TOKEN}" > ${JSON_KEY_FILE} 2>/dev/null

if [ "$?" -ne "0" ]; then
  echo "Could not get key list from vault";
  exit 1
fi

## We need to get the keys from the web group on Vault, so we use json_decode.sh to parse the JSON into a sh compatible format
## json decode will return the following data when given the keys.json from the vault GET
# ["lease_id"]	""
# ["renewable"]	false
# ["lease_duration"]	0
# ["data","keys",0]	"db_migration"
# ["data","keys",1]	"db_read"
## We pass that to egrep matching the lines that have ["data","keys",digit]
## We then pass those lines to sed with -n and -e options to return everything after the \t char (which is between the data block and the value)
## Then we pass it to sed to strip the speech marks around the value

sh /secret/json_decode.sh < ${JSON_KEY_FILE} | egrep "\[\"data\",.*" | cut -d '"' -f 6 > ${PLAIN_KEY_FILE}

while read -r key; do

  if [ -z "${key}" ]; then
    echo "Empty key found rather than a key to fetch"
  fi

  curl "${VAULT_ADDR}/v1/secret/${VAULT_GROUP}/${key}" -H"x-vault-token:${AUTH_TOKEN}" > ${TMP_KEY_FILE} 2>/dev/null

  if [ "$?" -ne "0" ]; then
    echo "Could not get the ${key} key from vault";
    exit 1
  fi

  sh /secret/json_decode.sh < ${TMP_KEY_FILE} | egrep "\[\"data\",.*" | cut -d '"' -f 4,6 | sed 's/"/=/g' >> ${KEY_FILE}

done < ${PLAIN_KEY_FILE}

curl -XDELETE "${EXCHANGE_ADDR}/token/${AUTH_TOKEN}" > /dev/null 2>&1

if [ -f ${TOKEN_FILE} ]; then
    rm ${TOKEN_FILE}
fi

if [ -f ${JSON_KEY_FILE} ]; then
    rm ${JSON_KEY_FILE}
fi
if [ -f ${PLAIN_KEY_FILE} ]; then
    rm ${PLAIN_KEY_FILE}
fi

if [ -f ${TMP_KEY_FILE} ]; then
    rm ${TMP_KEY_FILE}
fi
